{"version":3,"sources":["Form/currencies.js","Form/ShowResult/index.js","Form/index.js","Header/index.js","Section/index.js","Main/index.js","Wrapper/index.js","Body/index.js","App.js","serviceWorker.js","index.js"],"names":["currencies","name","rate","shortName","ShowResult","result","className","undefined","sourceAmount","toFixed","currencyHave","targetAmount","currencyWant","Form","calculateResult","useState","setCurrencyHave","setCurrencyWant","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","map","currency","key","type","required","step","Header","title","Section","href","rel","Main","children","Wrapper","Body","App","setResult","currencyHaveRate","find","currencyWantRate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.488d05bb.chunk.js","sourcesContent":["\nconst currencies = [\n{\n  name:\"zloty\",\n  rate:1,\n  shortName:\"PLN\",\n},\n{\n  name:\"euro\",\n  rate:4.4722,\n  shortName:\"EUR\",\n},\n{\n  name:\"usDollar\",\n  rate:3.9604,\n  shortName:\"USD\",\n},\n{\n  name:\"british pound\",\n  rate:4.9773,\n  shortName:\"GBP\",\n},\n{\n  name:\"swiss frank\",\n  rate:4.2049,\n  shortName:\"CHF\",\n},\n];\n\nexport default currencies;","import React from \"react\";\n\n\n const ShowResult = ({result}) => (\n\n  <p className=\"form__result \">\n   {result !== undefined && (\n    <>\n      {result.sourceAmount.toFixed(2)}&nbsp;{result.currencyHave}&nbsp;=&nbsp;\n      {result.targetAmount.toFixed(2)}&nbsp;{result.currencyWant}&nbsp;\n    </>\n   )}\n  </p>\n );\n\n export default ShowResult;","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport currencies from \"./currencies\";\nimport ShowResult from \"./ShowResult\";\n\nconst Form = ({ calculateResult ,result }) => {\n\n  const [currencyHave, setCurrencyHave] = useState(currencies[0].shortName);\n  const [currencyWant, setCurrencyWant] = useState(currencies[1].shortName);\n  const [amount, setAmount] = useState(\"\"); \n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    calculateResult(currencyHave, currencyWant, amount)\n  };\n\n\n  return( \n\n  <form className=\"form\" onSubmit={onSubmit}>\n  <fieldset className=\"form__fieldset\">\n    <legend className=\"form__legend\">\n      Wymiana waluty\n    </legend>\n    <p className=\" form__paragraph\">Pole oznaczone * musi zostać wypełnione</p>\n    <p><label>\n      <span className=\"form__labelText\">wymiana z: \n        <span className=\"form__span\">(wybierz walutę)</span>\n      </span>\n      <select\n        value={currencyHave}\n        onChange = {( {target} ) => setCurrencyHave(target.value)}\n        className= \"form__select\"\n        name=\"currencyHave\"\n      >\n        {currencies.map(currency =>(\n          <option\n            key={currency.shortName}\n            value={currency.shortName}\n          >\n            {currency.shortName}\n          </option>))}\n      </select>\n      </label></p>\n      <p><label>\n      <span className=\"form__labelText\">wymiana na: \n        <span className=\"form__span\">(wybierz walutę)</span>\n      </span>\n      <select\n        value={currencyWant}\n        onChange = {( {target} ) => setCurrencyWant(target.value)}\n        className=\"form__select \"\n        name=\"currencyWant\"\n      >\n        {currencies.map(currency =>(\n          <option\n            key={currency.shortName}\n            value={currency.shortName}\n          >\n          {currency.shortName}\n          </option>))}\n      </select>\n      </label></p>\n    <p><label>\n    <span className=\"form__labelText\">Podaj kwotę*: </span>\n    <input \n      value={amount}\n      onChange={({target})=> setAmount(target.value)}\n      className=\"form__field\"\n      name=\"value\" \n      type=\"number\" \n      required step=\"0.01\"/>\n    </label></p>\n    <button className=\"form__button\">przelicz</button>\n    <ShowResult result = {result} />\n  </fieldset>\n</form>\n\n);\n};\n\nexport default Form;","import React from \"react\";\nimport \"./style.css\";\n\nconst Header = ({title}) => (\n  <header className=\"header\">\n  <h1 className=\"header__title\">{title}</h1>\n</header>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nconst Section = () => (\n  <section className=\"section\">\n    <p className=\"section__paragraph\">Kursy walut pochodzą ze strony : \n    <a \n      className=\"section__link\"\n      href=\"https://internetowykantor.pl/kursy-walut/\"\n      target=\"_blank\" rel=\"noreferrer noopener\">\n      \"internetowykantor.pl\"\n    </a> \n      z dnia 7 lipca 2020\n      <span className=\"link__span\"> (otworzy się w nowej karcie)</span>\n    </p>\n  </section>\n);\n\nexport default Section;","import React from 'react';\n\nconst Main = ({children}) => (\n  <main className=\"main\">\n    {children}\n  </main>\n)\n\nexport default Main","import React from 'react';\nimport './style.css';\n\nconst Wrapper = ({children}) => (\n  <div className=\"wrapper\">\n    {children}\n  </div>\n);\n\nexport default Wrapper;","import React from 'react';\nimport './style.css'\n\nconst Body = ({children}) => (\n  <body className =\"body\">\n    {children}\n  </body>\n);\n\nexport default Body","import React, {useState} from 'react';\nimport Form from './Form';\nimport Header from './Header';\nimport Section from './Section';\nimport Main from './Main'\nimport Wrapper from './Wrapper';\nimport Body from './Body';\nimport currencies from \"./Form/currencies\";\n\n\n\nfunction App() {\n\n  const [result, setResult] = useState();\n  const calculateResult = (currencyHave, currencyWant, amount) => {\n\n    const currencyHaveRate = currencies.find\n      (({ shortName }) => shortName === currencyHave).rate;\n\n    const currencyWantRate = currencies.find\n      (({ shortName }) => shortName === currencyWant).rate;\n\n    setResult({\n      sourceAmount: +amount,\n      currencyHave,\n      targetAmount: (amount * currencyHaveRate)/currencyWantRate,\n      currencyWant,\n  });\n  };\n  \n  return (\n  <Body>\n    <Wrapper>\n      <Header title= \"kalkulator walutowy\"/>\n        <Main>\n        <Form\n           result = {result}\n           calculateResult = {calculateResult}\n        />\n          <Section/>\n        </Main>\n    </Wrapper>\n  </Body>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}