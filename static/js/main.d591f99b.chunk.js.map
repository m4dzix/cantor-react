{"version":3,"sources":["Form/styled.js","Form/currencies.js","Form/ShowResult/styled.js","Form/ShowResult/index.js","Form/index.js","Header/styled.js","Header/index.js","Section/styled.js","Section/index.js","Main/styled.js","Main/ShowDate/styled.js","Main/ShowDate/index.js","Main/useCurrentDate.js","Main/index.js","Wrapper/styled.js","Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledForm","styled","form","Paragraph","p","LabelText","span","Span","Select","select","Field","input","Button","button","Fieldset","fieldset","Legend","legend","currencies","name","rate","shortName","ShowResult","result","undefined","sourceAmount","toFixed","currencyHave","targetAmount","currencyWant","Form","calculateResult","useState","setCurrencyHave","setCurrencyWant","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","map","currency","key","type","required","step","Title","h1","Header","title","className","Link","a","Section","href","rel","StyledMain","main","StyledDate","ShowDate","clock","formatDate","Date","toLocaleString","weekday","hour","minute","second","day","month","showDate","setShowDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","Main","children","Wrap","div","Wrapper","App","setResult","currencyHaveRate","find","currencyWantRate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d591f99b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form `\r\n    margin: 10px;\r\n    text-align: center;\r\n    align-self: center;\r\n    width: 100%;\r\n`;\r\nexport const Paragraph = styled.p `\r\n    font-size: 15px;\r\n    color: #444;\r\n`;\r\nexport const LabelText = styled.span `\r\n    display: inline-block;\r\n    text-transform: uppercase;\r\n    padding: 5px 10px;\r\n    font-size: 20px;\r\n`;\r\nexport const Span = styled.span `\r\n    font-size: 10px;\r\n    color: #555;\r\n`;\r\nexport  const Select = styled.select `\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    border: solid 2px #888;\r\n`;\r\nexport const Field = styled.input `\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    border: solid 3px #888;\r\n`;\r\nexport const Button = styled.button `\r\n    display: inline-block;\r\n    background-color: hsl(41, 56%, 62%);\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n    border: solid 3px black;\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n\r\n    &:hover { \r\n        cursor: pointer;\r\n        background-color: hsl(41, 56%, 65%);\r\n    };\r\n\r\n    &:active{\r\n        background-color: hsl(41, 56%, 70%);\r\n    };\r\n`;\r\nexport const Fieldset = styled.fieldset `\r\n    border: solid 4px black;\r\n    background-color: peachpuff;\r\n    border-radius: 10px;\r\n`;\r\nexport const Legend = styled.legend `\r\n    font-size: 30px;\r\n    background-color: hsl(41, 56%, 62%);\r\n    padding: 5px 15px;\r\n    border: solid 4px black;\r\n    border-radius: 10px;\r\n`;\r\n","\r\nconst currencies = [\r\n{\r\n  name:\"zloty\",\r\n  rate:1,\r\n  shortName:\"PLN\",\r\n},\r\n{\r\n  name:\"euro\",\r\n  rate:4.4722,\r\n  shortName:\"EUR\",\r\n},\r\n{\r\n  name:\"usDollar\",\r\n  rate:3.9604,\r\n  shortName:\"USD\",\r\n},\r\n{\r\n  name:\"british pound\",\r\n  rate:4.9773,\r\n  shortName:\"GBP\",\r\n},\r\n{\r\n  name:\"swiss frank\",\r\n  rate:4.2049,\r\n  shortName:\"CHF\",\r\n},\r\n];\r\n\r\nexport default currencies;","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p `\r\n    font-size: 30px;\r\n    margin: 10px;\r\n`;","import React from \"react\";\r\nimport { Paragraph} from \"./styled\";\r\n \r\n\r\n const ShowResult = ({result}) => (\r\n\r\n  <Paragraph>\r\n   {result !== undefined && (\r\n    <>\r\n      {result.sourceAmount.toFixed(2)}&nbsp;{result.currencyHave}&nbsp;= {\"\"}\r\n      {result.targetAmount.toFixed(2)}&nbsp;{result.currencyWant}&nbsp;\r\n    </>\r\n   )}\r\n  </Paragraph>\r\n );\r\n\r\n export default ShowResult;","import React, { useState } from \"react\";\r\nimport {StyledForm, Paragraph, LabelText, Span, Select,\r\n   Field, Button, Fieldset, Legend} from \"./styled\";\r\nimport currencies from \"./currencies\";\r\nimport ShowResult from \"./ShowResult\";\r\n\r\nconst Form = ({ calculateResult ,result }) => {\r\n\r\n  const [currencyHave, setCurrencyHave] = useState(currencies[0].shortName);\r\n  const [currencyWant, setCurrencyWant] = useState(currencies[1].shortName);\r\n  const [amount, setAmount] = useState(\"\"); \r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(currencyHave, currencyWant, amount)\r\n  };\r\n\r\n\r\n  return( \r\n\r\n  <StyledForm onSubmit={onSubmit}>\r\n  <Fieldset>\r\n    <Legend>\r\n      Wymiana waluty\r\n    </Legend>\r\n    <Paragraph>Pole oznaczone * musi zostać wypełnione</Paragraph>\r\n    <p><label>\r\n      <LabelText>wymiana z: \r\n        <Span>(wybierz walutę)</Span>\r\n      </LabelText>\r\n      <Select\r\n        value={currencyHave}\r\n        onChange = {( {target} ) => setCurrencyHave(target.value)}\r\n        name=\"currencyHave\"\r\n      >\r\n        {currencies.map(currency =>(\r\n          <option\r\n            key={currency.shortName}\r\n            value={currency.shortName}\r\n          >\r\n            {currency.shortName}\r\n          </option>))}\r\n      </Select>\r\n      </label></p>\r\n      <p><label>\r\n      <LabelText>wymiana na: \r\n        <Span>(wybierz walutę)</Span>\r\n      </LabelText>\r\n      <Select\r\n        value={currencyWant}\r\n        onChange = {( {target} ) => setCurrencyWant(target.value)}\r\n        name=\"currencyWant\"\r\n      >\r\n        {currencies.map(currency =>(\r\n          <option\r\n            key={currency.shortName}\r\n            value={currency.shortName}\r\n          >\r\n          {currency.shortName}\r\n          </option>))}\r\n      </Select>\r\n      </label></p>\r\n    <p><label>\r\n    <LabelText>Podaj kwotę*: </LabelText>\r\n    <Field\r\n      value={amount}\r\n      onChange={({target})=> setAmount(target.value)}\r\n      name=\"value\" \r\n      type=\"number\" \r\n      required step=\"0.01\"/>\r\n    </label></p>\r\n    <Button>przelicz</Button>\r\n    <ShowResult result = {result} />\r\n  </Fieldset>\r\n</StyledForm>\r\n\r\n);\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1 `\r\n    margin: 10px;\r\n    margin-bottom: 80px;\r\n    padding: 20px 0;\r\n    font-size: 40px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    letter-spacing: 3px;\r\n    background-color: hsl(41, 50%, 45%);\r\n    border-radius: 10px;\r\n    `;\r\n","import React from \"react\";\r\nimport {Title} from \"./styled\";\r\n\r\nconst Header = ({title}) => (\r\n  <header className=\"header\">\r\n    <Title>{title}</Title>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n    padding: 10px;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    background-color: peachpuff;\r\n    margin: 10px;\r\n    border: 3px solid black;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    text-decoration: none;\r\n    color:black;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        color: #555;\r\n    }\r\n    &:active{\r\n        color: #777;\r\n    }\r\n`;\r\n\r\nexport const Span = styled.span `\r\n    font-size: 15px;\r\n`;","import React from \"react\";\r\nimport {Paragraph, Link, Span} from \"./styled\";\r\n\r\nconst Section = () => (\r\n  <section>\r\n    <Paragraph>Kursy walut pochodzą ze strony : \r\n    <Link\r\n      href=\"https://internetowykantor.pl/kursy-walut/\"\r\n      target=\"_blank\" rel=\"noreferrer noopener\">\r\n      \"internetowykantor.pl\"\r\n    </Link> \r\n      z dnia 7 lipca 2020\r\n      <Span> (otworzy się w nowej karcie)</Span>\r\n    </Paragraph>\r\n  </section>\r\n);\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\n\r\nexport const StyledMain = styled.main`\r\n    display: flex;\r\n    align-self: start;\r\n    flex-direction:column;\r\n`;","import styled from \"styled-components\"\r\n\r\nexport const StyledDate = styled.p`\r\n    font-family: monospace;\r\n    font-size: 12px;\r\n    align-self: flex-end;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    display: inline-block;\r\n    background-color:rgba(0, 0, 0, 0.507);\r\n\r\n\r\n@media(max-width: 414px) and (orientation: portrait){\r\n\r\n        text-align: center;\r\n}\r\n`;","import React from \"react\";\r\nimport {useCurrentDate} from \"../useCurrentDate\";\r\nimport { StyledDate } from \"./styled\";\r\n\r\n\r\nconst ShowDate = () => {\r\n\r\n    const clock = useCurrentDate();\r\n\r\nreturn (\r\n\r\n    <StyledDate>\r\n        Aktualna data i godzina:{\" \"}{clock}\r\n    </StyledDate>\r\n    );\r\n    };\r\n\r\nexport default ShowDate;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    \r\n    const formatDate = () => \r\n    new Date().toLocaleString(undefined, {\r\n        weekday:\"long\",\r\n        hour:\"2-digit\",\r\n        minute: \"2-digit\",\r\n        second: \"2-digit\",\r\n        day:\"numeric\",\r\n        month:\"long\",\r\n    });\r\n\r\n\r\n    const [showDate, setShowDate] = useState( formatDate() );\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval( () => {\r\n        setShowDate(formatDate());\r\n    }, 1000);\r\n\r\n    return () => {clearInterval(intervalId);\r\n    };\r\n    }, []);\r\n\r\n    return showDate;\r\n};;","import React from 'react';\r\nimport { StyledMain } from \"./styled\";\r\nimport ShowDate from \"./ShowDate\";\r\n\r\nconst Main = ({children}) => (\r\n\r\n  <StyledMain>\r\n    <ShowDate/>\r\n    {children}\r\n  </StyledMain>\r\n  \r\n);\r\n\r\nexport default Main;","import styled from \"styled-components\";\r\n\r\nexport const Wrap = styled.div `\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport{Wrap} from \"./styled\";\r\n\r\nconst Wrapper = ({children}) => (\r\n  <Wrap>\r\n    {children}\r\n  </Wrap>\r\n);\r\n\r\nexport default Wrapper;","import React, {useState} from 'react';\r\nimport Form from './Form';\r\nimport Header from './Header';\r\nimport Section from './Section';\r\nimport Main from './Main'\r\nimport Wrapper from './Wrapper';\r\nimport currencies from \"./Form/currencies\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [result, setResult] = useState();\r\n  const calculateResult = (currencyHave, currencyWant, amount) => {\r\n\r\n    const currencyHaveRate = currencies.find\r\n      (({ shortName }) => shortName === currencyHave).rate;\r\n\r\n    const currencyWantRate = currencies.find\r\n      (({ shortName }) => shortName === currencyWant).rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      currencyHave,\r\n      targetAmount: (amount * currencyHaveRate)/currencyWantRate,\r\n      currencyWant,\r\n  });\r\n  };\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <Header title= \"kalkulator walutowy\"/>\r\n        <Main>\r\n        <Form\r\n           result = {result}\r\n           calculateResult = {calculateResult}\r\n        />\r\n          <Section/>\r\n        </Main>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}